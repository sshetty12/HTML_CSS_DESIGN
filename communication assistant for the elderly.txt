#include <LiquidCrystal.h>
#include <SoftwareSerial.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

const int rs = 13, en = 12, d4 = 8, d5 = 9, d6 = 10, d7 = 11;
LiquidCrystal lcd(rs, en, d4, d5, d6, d7);



#include <Wire.h>

#include <Adafruit_Sensor.h> 

#include <Adafruit_ADXL345_U.h>

Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified();

SoftwareSerial bluetoothSerial(6, 7);/* (Rx, Tx) */


unsigned long temp=0;

char ch;
#define heart 13

float tempc;
float vout;

int data=A0;
int count=0;

int SW=2;
int Buzzer=3;
int Relay=4;
//char ch;
String readvoice;

char mystr[10];


byte customChar1[8] = {0b00000,0b00000,0b00011,0b00111,0b01111,0b01111,0b01111,0b01111};
byte customChar2[8] = {0b00000,0b11000,0b11100,0b11110,0b11111,0b11111,0b11111,0b11111};
byte customChar3[8] = {0b00000,0b00011,0b00111,0b01111,0b11111,0b11111,0b11111,0b11111};
byte customChar4[8] = {0b00000,0b10000,0b11000,0b11100,0b11110,0b11110,0b11110,0b11110};
byte customChar5[8] = {0b00111,0b00011,0b00001,0b00000,0b00000,0b00000,0b00000,0b00000};
byte customChar6[8] = {0b11111,0b11111,0b11111,0b11111,0b01111,0b00111,0b00011,0b00001};
byte customChar7[8] = {0b11111,0b11111,0b11111,0b11111,0b11110,0b11100,0b11000,0b10000};
byte customChar8[8] = {0b11100,0b11000,0b10000,0b00000,0b00000,0b00000,0b00000,0b00000};


int i;

void Emergency()
{
  Serial.println("$Emergency...#");
  lcd.clear();
  lcd.print("Emergency..");
  digitalWrite(Buzzer,HIGH);
  delay(2000);
  digitalWrite(Buzzer,LOW);

}

void setup() 
{
 pinMode(SW,INPUT_PULLUP);
  pinMode(Buzzer,OUTPUT);
  pinMode(Relay,OUTPUT);
  digitalWrite(Buzzer,LOW);
   digitalWrite(Relay,LOW);
  
  Serial.begin(9600);
   bluetoothSerial.begin(9600);
  lcd.begin(16, 2);
  lcd.createChar(1, customChar1);
    lcd.createChar(2, customChar2);
    lcd.createChar(3, customChar3);
    lcd.createChar(4, customChar4);
    lcd.createChar(5, customChar5);
    lcd.createChar(6, customChar6);
    lcd.createChar(7, customChar7);
    lcd.createChar(8, customChar8);
    
    pinMode(data,INPUT);
   
 pinMode(heart, OUTPUT);
  lcd.clear();
  lcd.print("  Communication  ");
  lcd.setCursor(0, 1);
  lcd.print("Assistance System.");
  delay(1000);
   if(!accel.begin())

   {

      Serial.println("No valid sensor found");

      while(1);

   }
  attachInterrupt(digitalPinToInterrupt(SW), Emergency, FALLING); 
 }

void loop()
{
    VOICE_MODE();
  LDR_CHECK();
   TEMP_CHECK();
   HEARTBEAT_CHECK();
   ACCELEROMETER_CHECK();

}
void VOICE_MODE()
{
  Serial.println("VOICE MODE SELECTED.");
  while(1)
  {
    
    bluetoothSerial.begin(9600);
    while (bluetoothSerial.available())
    {  //Check if there is an available byte to read
      delay(10); //Delay added to make thing stable 
      char c = bluetoothSerial.read(); //Conduct a serial read
      readvoice += c; //build the string- "forward", "reverse", "left" and "right" 
    }
     Serial.println(readvoice);
    if (readvoice.length() > 0) 
    {
      lcd.clear();
      lcd.print(readvoice);
      delay(1000);
  
    readvoice="";
  }
 
  LDR_CHECK();
   TEMP_CHECK();
   HEARTBEAT_CHECK();
   ACCELEROMETER_CHECK();
} 
    
}
void TEMP_CHECK()
{
 float Temp_val=analogRead(A1);
  float Temp_out=(Temp_val*5.0)/1023.0;
  Temp_out=Temp_out*10;
  Temp_out=Temp_out+25;
  Serial.print("Temp: ");
  Serial.print(Temp_out);
  Serial.println("c");
  lcd.clear();
  lcd.print("Temp:");
  lcd.print(Temp_out);  
  lcd.print("C");
  delay(1000); 
  String data11="Tempeature is"+ String(Temp_out) + "degree celcius";
  bluetoothSerial.println(data11);
  delay(2000);

  if(Temp_out>35.0)
  {
    lcd.clear();
    lcd.print("Temp is More");
    Serial.println("$Temperature is More#");
     digitalWrite(Buzzer,HIGH);
    delay(1000);
     digitalWrite(Buzzer,LOW);
    
  }

}

void ACCELEROMETER_CHECK()
{
  sensors_event_t event; 

   accel.getEvent(&event);

  int X_val=event.acceleration.x;
  int Y_val=event.acceleration.y;
  
    lcd.clear();
    lcd.print("X:");
    lcd.print(X_val);
    lcd.setCursor(0, 1);
    lcd.print("Y:");
    lcd.print(Y_val);
    delay(1000);

    if((X_val<-7) || (X_val>7))
    {
      lcd.clear();
      lcd.print("Fall Detected");
      Serial.println("$Fall Detected#"); 
      bluetoothSerial.println("Fall Detected");
      
      digitalWrite(Buzzer,HIGH);
      delay(1000);
      digitalWrite(Buzzer,LOW);
   }
    if((Y_val<-7) || (Y_val>7))
    {
      lcd.clear();
      lcd.print("Fall Detected");
      Serial.println("$Fall Detected#"); 
      
      digitalWrite(Buzzer,HIGH);
      delay(1000);
      digitalWrite(Buzzer,LOW);
   }

}
void LDR_CHECK()
{
  int LDR_val=analogRead(A2);
  LDR_val=1023-LDR_val;
  lcd.clear();
  lcd.print("LDR:");
  lcd.print(LDR_val);
  Serial.print("LDR:");
  Serial.println(LDR_val);
  delay(1000);

  if(LDR_val<500)
  {
    lcd.clear();
    lcd.print("NIGHT TIME");
    Serial.println("$Night Time..#");
      digitalWrite(Buzzer,HIGH);
      digitalWrite(Relay,HIGH);
    delay(1000);
     digitalWrite(Buzzer,LOW);
    

  }
    if(LDR_val>600)
  {
    lcd.clear();
    lcd.print("DAY TIME");
    Serial.println("Day Time..");
    digitalWrite(Relay,LOW);
    delay(1000);
    
    

  }

}

void HEARTBEAT_CHECK()
{
   count=0;
   lcd.setCursor(0, 0);
   lcd.print("Place The Finger");
   lcd.setCursor(0, 1);
   lcd.print("to check HB");
   delay(2000);
 // while(digitalRead(start)>0);
  
   lcd.clear();
   temp=millis();
   
   while(millis()<(temp+10000))
   {
      if(analogRead(data)<100)
        {
         count=count+1;
         
         lcd.setCursor(6, 0);
         lcd.write(byte(1));
         lcd.setCursor(7, 0);
         lcd.write(byte(2));
         lcd.setCursor(8, 0);
         lcd.write(byte(3));
         lcd.setCursor(9, 0);
         lcd.write(byte(4));

         lcd.setCursor(6, 1);
         lcd.write(byte(5));
         lcd.setCursor(7, 1);
         lcd.write(byte(6));
         lcd.setCursor(8, 1);
         lcd.write(byte(7));
         lcd.setCursor(9, 1);
         lcd.write(byte(8));
         
         while(analogRead(data)<100);

         lcd.clear();
        }
   }
   
         lcd.clear();
         lcd.setCursor(0, 0);
         count=count*5;
         lcd.setCursor(2, 0);
         lcd.write(byte(1));
         lcd.setCursor(3, 0);
         lcd.write(byte(2));
         lcd.setCursor(4, 0);
         lcd.write(byte(3));
         lcd.setCursor(5, 0);
         lcd.write(byte(4));

         lcd.setCursor(2, 1);
         lcd.write(byte(5));
         lcd.setCursor(3, 1);
         lcd.write(byte(6));
         lcd.setCursor(4, 1);
         lcd.write(byte(7));
         lcd.setCursor(5, 1);
         lcd.write(byte(8));
         lcd.setCursor(7, 1);
         lcd.print(count);
         lcd.print(" BPM");

      sprintf(mystr, "HB:%d", count);
      Serial.println(mystr);
  
      delay(1000);
      if(count>120)
      {
         Serial.println("$More Heartbeat#");  
        digitalWrite(Buzzer,HIGH);
    delay(1000);
     digitalWrite(Buzzer,LOW);; 
        
      }

      temp=0;
      count=0;
      delay(300);

}